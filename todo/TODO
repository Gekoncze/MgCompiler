### DALŠÍ VELKÉ ÚKOLY
	# dědičnost
		u dědičnosti namísto extends a implements použít klíčové slovo IS
		DEFINE PUBLIC CLASS FooBar IS Foo, Bar
		kontrolovat cyklickou dědičnost
		kontrolovat diamantovou dědičnost
		dědičnost pak zkusit implementovat pomocí kompozice

	# ukazatel na funkci
		FunctionType& foo = &bar
		DEFINE PUBLIC FUNCTION INTERFACE Operation INPUT Int32 a, Int32 b OUTPUT int32

	# šablony
		DEFINE PUBLIC TEMPLATE Map PARAMETERS Type1, Type2
		DEFINE PUBLIC CLASS WorldMap TEMPLATE Map PARAMETERS Road, City

	# výjimky
		výjimky implementovat na úrovni vláken a thread local proměnných
		TRY someCommand: a, b, c  # optional command
		TRY
			someCommand: a, b, c
			...
			ROLLBACK
			...
		EXCEPTION
			someUndoCommand: d

	# vlastní přístupová oprávnění
		mohl by být teoreticky problém s parsováním tříd a funkcí, které na nich závisí
		proto je tedy třeba, aby byly prvně zkompilována oprávnění a až poté funkce a třídy
			bude tedy třeba mechanismus na odkládání kompilace tříd a funkcí
                differend options for readable, writeable, addressable

	# add support for default value for attributes and parameters

### DALŠÍ ÚKOLY
	add support for using aliases
	add support for using certain objects in modules / classes ???
	add support for while/for aliases (used for continue and break)
	add goto command

	C translator
                vícero návratových hodnot implementovat pomocí vracení struktury
		add support for multiple value return value (as struct)
		možnost generování unikátních identifikátorů místo srozumitelných jmen

	trackovani usage
		bude spolupracovat nejspíše s resolve, případně context.findObject(s) a External
		asi bude třeba do mg named objektu přidat seznam referencí na něj

        opravit lokaci
            pro bloky nastavit getlocation na všechny řádky které obsahuje
            pro kořenový blok nastavit lokaci na celý soubor
            zajistit správný výpis hodnoty sloupce (závisí na velikosti odsazení TAB)
            doladit zpracování error message

        implementovat řetězce obecně jako properties ???

### SOON


### NOW
	C translator
            automaticky doplňovat všude volatile
            zajistit správný překlad literálů
                + možnost uživatelsky definovaných číselných soustav ???
            oprava nekompatibilních jmen proměnných
                pokud začíná na písmeno, tak přidat podtržítko
            vymyslet robustní mechanismus pro řešení Cčkovských závislostí
                mohou se objevit duplicitní závislosti v rámci jednoho výstupního souboru - ty nějak vyřešit

	Resolver
            kontrola oprávnění
            když nalezneme v kontextu named objekt, který ale nakonec nevyhovuje
                bylo by dobré dát možnost uživateli se zeptat, jací kandidáti jsou k dispozici a proč který kandidát nevyhovuje
                ChainList<MgObject> candidates
                    možná by se hodilo to obalit do třídy Candidates, kam by se případně mohla ukládat informace s odůvodněním odmítnutí
                    ale kandidáti jsou i ChainList<MgPhysicalCall>, tak asi třeba řešit zvlášť, případně nechat no pokud nebude vadit

### DONE
Moving on
    moved smples to new mg ide project
    moved project explorer files to mg ide project
    moved some collection files temporarily
    deleted chain list classes, now will be using the one from mg collections
    changed compiler to use external files instead
    fixed chain list count method usage