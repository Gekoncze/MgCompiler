### DONE ### -----------------------------------------------------------------------------------------------------------



### NOW ### ------------------------------------------------------------------------------------------------------------
tasks
    add missing annotations to fields
    make child tasks into fields

compiler explorer
    make top path editable
    will support keyboard shortcuts:
        context menu for additional actions
        right/left arrow - show / hide children of selected node


### SOON ### -----------------------------------------------------------------------------------------------------------
physical entities
    think of what interpret will be actually using during runtime


### LATER ### ----------------------------------------------------------------------------------------------------------
resolver
    first has to resolve stamps, then other
    aliases has to be stored somehow, or searched by context

    maybe separate step in resolver to fill in context entities ???
        that would require re-creating context for each entity ...
        better would be remporary context object that would be filled with all possible entity links
        but links can be created not only with name ... operators too, and depends on input parameters too

test
    types.mg - define all required operators in test file

language
    add option to specify target mg language version
        file based
        project based

    templates !!! or collections ... !
    exceptions - type for buildin, SAVEPOINT/TRY, CATCH, ROLLBACK, ...

    compilation
        build stamp definitions

    aggregation as clever pointers
        option to track normal pointers too in debug mode

    automatické volání konstruktorů destruktorů ???
        kdy a jak?

    modules
    custom stamps definitions

translator to c/cpp

compiler
    add healing spots
        not only separating compilation of each line
        but also a part until which line is correct and after which is errorneous
            process line only up until the point where is correct
            automatically close all brackets and other groups
        do not add more errors if (probably current task?) already has some
            because the new ones are most probably caused by the previous ones


### IDEAS ### ----------------------------------------------------------------------------------------------------------
language
    an idea - class could be location at the same time
        this could allow to place "inner" classes and functions in separate files
        on filesystem level, it could be solved as a folder with the same name as the class (without the extension)

distinguish "objrects" and "attribute objects" somehow
different levels of resolution of names - file level resolution, project level resolution
types with & $ ?
stamp group / types
mg physical entities woud equal those used for interpreter